<?php

/**
 * Implementation of hook_menu().
 */
function seo_thing_menu() {
  $items = array();
  
  $items['node/%node/csv'] = array(
    'title' => 'Download CSV',
    'page callback' => 'seo_thing_download_csv',
    'page arguments' => array(1),
    'access callback' => 'seo_thing_download_csv_access',
    'access arguments' => array(1),
    'weight' => 2,
    'type' => MENU_LOCAL_TASK,
  );
    
  $items['keywords'] = array(
    'title' => 'Keywords',
    'description' => "Occurrences of keywords across all campaigns.",
    'page callback' => 'seo_thing_keywords',
    'access arguments' => array('access content'),
  );
  
  return $items;
}

function seo_thing_download_csv($node) {
  $rows = array();
  
  foreach ($node->field_campaign_keywords as $keyword) {
    $keyword = trim($keyword['value']);
    $rows[] = array($keyword, sprintf('"%s"', $keyword), sprintf('[%s]', $keyword));
  }
  
  if (count($rows)) {
    $tmp = file_directory_temp() . '/' . uniqid();
    
    $fp = fopen($tmp, 'w');
    foreach ($rows as $row) {
      fputcsv($fp, $row);
    }
    fclose($fp);
    
    if (ob_get_level()) {
      ob_end_clean();
    }
    
    header("Cache-Control: public");
    header("Content-Description: File Transfer");
    header("Content-Disposition: attachment; filename=" . seo_thing_clean_string($node->title) . '-' . $node->nid . ".csv");
    header("Content-Type: text/csv");
    header("Content-Transfer-Encoding: binary");
    readfile($tmp);
    exit;
  }
}

function seo_thing_download_csv_access($node) {
  return $node->type === 'campaign';
}

function seo_thing_theme_registry_alter(&$theme_registry) {
  $path = drupal_get_path('module', 'seo_thing') . '/templates';
  array_unshift($theme_registry['node']['theme paths'], $path);
  array_unshift($theme_registry['content_field']['theme paths'], $path);
}

function seo_thing_preprocess_node(&$vars) {
  $vars['template_files'][] = 'node-campaign-type';
}

function seo_thing_preprocess_content_field(&$vars) {
  if ($vars['field_name'] === 'field_campaign_keywords') {
    $header = array(
      array('data' => t('Keyword')),
      array('data' => t('"Keyword"')),
      array('data' => t('[Keyword]')),
    );
     
    $rows = array(); 
    foreach ($vars['items'] as $keyword) {
      $keyword = check_plain(trim($keyword['value']));
      $rows[] = array($keyword, sprintf('"%s"', $keyword), sprintf('[%s]', $keyword));
    }
    
    $vars['keywords_table'] = theme('table', $header, $rows);
  }
}

/**
 * Page callback for /admin/keywords
 */
function seo_thing_keywords() {
  $header = array(
    array('data' => t('Keyword'), 'field' => 'word'),
    array('data' => t('Total'), 'field' => 'total')
  );

  $result = pager_query('
    SELECT field_campaign_keywords_value AS word, 
    COUNT(*) AS total 
    FROM {content_field_campaign_keywords} 
    GROUP BY word' . tablesort_sql($header)
  );
  
  $rows = array();
  while ($keyword = db_fetch_object($result)) {
    $rows[] = array(check_plain($keyword->word), $keyword->total);
  }
  
  return theme('pager') . theme('table', $header, $rows) . theme('pager');
}

function seo_thing_clean_string($string) {
  $clean = preg_replace("/[^a-zA-Z0-9\/_|+ -]/", '', $string);
  $clean = strtolower(trim($clean, '-'));
  return preg_replace("/[\/_|+ -]+/", '-', $clean);
}
